plugins {
	id 'java'
	id 'java-library'
	id 'maven-publish'
	id 'org.springframework.boot' version '3.4.4'
}

def generateVersion() {
	def date = new Date().format("yyyy-MM-dd")
	def commitCount = "git rev-list --count HEAD".execute().text.trim()
	return "${date}.${commitCount}"
}

group = 'dev.onebuild'
version = generateVersion()

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

jar {
	enabled = true
	archiveFileName = "1build-commons-${version}.jar"
}

bootJar {
	enabled = false
}

dependencies {
	compileOnly("org.projectlombok:lombok:1.18.38")
	annotationProcessor("org.projectlombok:lombok:1.18.38")

	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.16.0'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.2'

	implementation 'org.springframework.boot:spring-boot-starter:3.4.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc:3.4.4'

	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.4.4'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.11.4'
}

tasks.named('build') {
	dependsOn writeVersionFile
}

tasks.named('test') {
	useJUnitPlatform()
}

task writeVersionFile {
	def versionFile = file("version.txt")
	inputs.property("version", version)
	outputs.file(versionFile)

	doLast {
		println "Writing version: ${version} to ${versionFile}"
		versionFile.text = version
	}
}